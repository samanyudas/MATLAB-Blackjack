% Changes Made
% - Initial implementation of a basic Blackjack game.
% - Added core functions: createDeck(), shuffleDeck(), userBet(), dealInitialCards(), and blackjackGame().
% - Implemented simple card dealing, shuffling using randperm, and basic betting system.
% - Included game rules display and a main game loop that continues until balance is zero.
% - No advanced features like seasons, jackpots, or visualizations; focused on functional gameplay.

function deck = createDeck() % createDeck
    ranks = {'2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'};
    suits = {'Hearts', 'Diamonds', 'Clubs', 'Spades'};
    values = [2,3,4,5,6,7,8,9,10,10,10,10,11];
    
    deck = [];
    i = 1;
    for suit = 1:length(suits)
        for rank = 1:length(ranks)
            deck(i).Rank = ranks{rank};
            deck(i).Suit = suits{suit};
            deck(i).Value = values(rank);
            i = i + 1;
        end
    end
end
function deck = shuffleDeck(deck) % shuffleDeck
    indices = randperm(length(deck));
    deck = deck(indices);
end
function [bet] = userBet(Balance) % userBet
    while true
        bet = lower(input("Enter amount to bet: ",'s'));
        bet = str2double(bet);
        
        if bet > 0 && bet <= Balance
            break 
        else
            fprintf("Invalid amount! Enter a number between 1 and %0.0f \n",Balance)
        end
    end
end
function [userHand, dealerHand, deck] = dealInitialCards(deck) % dealInitialCards
    dealerHand = [deck(1),deck(4)];
    userHand = [deck(2),deck(3)];
    deck(1:4) = [];
end

%% BlackJack Game (Main File)
function blackjackGame()
    Balance = 10000;
    deck = createDeck();
    disp('Shufffling and dealing cards');
    deck = shuffleDeck(deck);
    
    while Balance > 0
        fprintf('Your current balance: $%0.0f\n', Balance);
        bet = userBet(Balance);
        if bet>0 && bet<=Balance
           [userHand, dealerHand, deck] = dealInitialCards(deck);
            
           fprintf('\nYour initial cards: %s of %s, %s of %s', userHand(1).Rank, userHand(1).Suit, userHand(2).Rank, userHand(2).Suit);
           fprintf('\nDealer cards: %s of %s, [Hidden] \n', dealerHand(1).Rank, dealerHand(1).Suit);
        end    
    end
    
    % Game over message
    disp("Game Over!")
end

blackjackGame()

function gameRules()
% Blackjack Game - Rules
% Note: The rules of game have been generated by ChatGPT but has been coded by myself

    fprintf("\n====== Blackjack Game Rules ======\n");
    fprintf("\n Objective:\n");
    fprintf("The goal is to have a hand value closer to 21 than the dealer without exceeding 21.\n\n");
    
    fprintf("Card Values:\n");
    fprintf("- Number Cards (2-10): Face value.\n");
    fprintf("- Face Cards (J, Q, K): 10 points each.\n");
    fprintf("- Ace (A): Can be 1 or 11, whichever benefits you most.\n\n");
    
    fprintf("How to Play:\n");
    fprintf("1. Each player and the dealer are dealt two cards.\n");
    fprintf("2. Dealer shows one card, while the other remains hidden.\n");
    fprintf("3. Player can:\n");
    fprintf("   - Hit (draw a card)\n");
    fprintf("   - Stand (keep current hand)\n");
    fprintf("   - Double Down (double bet, take one extra card, then stand)\n");
    fprintf("   - Split (if two same cards, play as separate hands)\n\n");
    
    fprintf("4. Dealer must hit on 16 or less, and stand on 17 or more.\n");
    fprintf("5. If a hand exceeds 21, that player loses (bust).\n");
    fprintf("6. Blackjack (21 with first two cards) is an instant win unless dealer also has Blackjack (push/tie).\n\n");
    
    fprintf("Payouts:\n");
    fprintf("- Win: 1:1 (Bet $100 â†’ Win $100)\n");
    fprintf("- Blackjack: 3:2 (Bet $100 â†’ Win $150)\n");
    fprintf("- Tie (Push): No money won or lost\n\n");

    fprintf("Press Enter to start game.\n");
    pause;
end
%{
clc; % Clear command window
clear; % Clear workspace variables

% Prompting user to enter their name and validating the input
while true
    name = input("Please enter your name: ",'s'); % Getting the name input as string
    if ~isempty(name) && all(isletter(name)) && ~any(isspace(name)) % Checking if the input given is valid or not
        break; % Exiting loop, if valid name entered
    else
        fprintf("Invalid input! Name must contain only alphabets and no spaces.: \n");
    end
end

% Displaying welcome messages
fprintf("\nHello %s, \n",name);
fprintf("Welcome to Casino Blackjack. \n");
fprintf("Your initial cash is $1000. Good luck! \n \n")

% Displaying main menu and prompt user for selection of options
while true
    fprintf("1. View Game Rules\n");
    fprintf("2. Play Blackjack\n");
    fprintf("3. Exit\n");
    num = input("Enter your choice (1-3): ","s"); % Getting the user input as string
    num = str2double(num); % Converting input to numerical value
    if ~isnan(num) && (num == 1 || num == 2 || num == 3) % Validating the input
        break; % Exiting loop if input is valid
    else
        fprintf("Invalid Input Entered! Enter Proper Input! \n");
    end
end

% Processing the user's choice
if num == 1
    gameRules(); % Calling the function "gameRules()" to display game rules
    blackjackGame(); % Starting blackjack game
elseif num == 2
    blackjackGame(); % Starting blackjack game
elseif num == 3
    fprintf("\nThank you for visiting Casino Blackjack. Goodbye!\n"); % Exit message
end
%}